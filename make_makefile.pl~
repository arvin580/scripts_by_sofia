#!/usr/bin/perl -w
use strict;
use Getopt::Long;
use File::Spec;
use FindBin qw($RealBin);

my $SCRIPTS     = $RealBin;
my $current     = File::Spec->curdir();
my $current_dir = File::Spec->rel2abs($current);

if ( !defined @ARGV ) {
  &getHelp();
}
my $DESTINATION_DIR;
my $FASTQ_DIR;
my $BARCODE_SAMPLE_FILE;
my $QUEUE;

my $dbSNP  = '/shared/wesslerlab/Rice/HEG4/dbSNP/dbSNPs_VQSR.vcf';
my $GENOME = '/shared/wesslerlab/Rice/Genome/index/MSU_r7.corrected.fa';

GetOptions(
  'o|output_dir:s'     => \$DESTINATION_DIR,
  'f|fastq_dir:s'      => \$FASTQ_DIR,
  'i|barcode_sample:s' => \$BARCODE_SAMPLE_FILE,
  'd|dbSNPs:s'         => \$dbSNP,
  'g|genome:s'         => \$GENOME,
  'q|qsub_q:s'         => \$QUEUE,
  'h|help'             => \&getHelp,
);

sub getHelp {
  print " 
Assistants in creating the config file for makefile to process reads for genotyping.

usage: $0 -o output_dir -f fastq_dir -i barcode_sample_id_file -q qsub_q -h this message

  o|output_dir:s      	=> name of directory for all outputed directories and files
  f|fastq_dir:s       	=> name of directory of fastq files to be processed
  i|barcode_sample:s  	=> name of file with Sample_names and illumina barcode ids
  q|qsub_q:s          	=> name of qsub queue in which you want to submit, if a queue is available
  h|help 		=> this message

";
  exit 1;
}

my $outdir;
if ( defined $DESTINATION_DIR and -e $DESTINATION_DIR ) {
  $outdir = File::Spec->rel2abs($DESTINATION_DIR);
}
else {
  print
"Please provide the directory for output. $DESTINATION_DIR is not valid or does not exist\n";
  getHelp();
}
my $fastq_dir;
if ( defined $FASTQ_DIR and -e $FASTQ_DIR ) {
  $fastq_dir = File::Spec->rel2abs($FASTQ_DIR);
}
else {
  print
"Please provide the directory in which your FASTQ files can be found. $FASTQ_DIR is not valid\n";
  getHelp();
}
my $id_file;
if ( defined $BARCODE_SAMPLE_FILE and -e $BARCODE_SAMPLE_FILE ) {
  $id_file = File::Spec->rel2abs($BARCODE_SAMPLE_FILE);
}
else {
  print
"Please provide the path to the file of Sample names and Illumina barcode IDs. $BARCODE_SAMPLE_FILE is not valid or does not exist\n";
  getHelp();
}
my $dbSNP_file;
if ( defined $dbSNP and -e $dbSNP ) {
  $dbSNP_file = File::Spec->rel2abs($dbSNP);
}
else {
  print
"Please provide the path to the file of Genotype Postitions and alleles. $dbSNP is not valid or does not exist\n";
  getHelp();
}
my $genome_file;
my $genome_base;
if ( defined $GENOME and -e $GENOME ) {
  $genome_file = File::Spec->rel2abs($GENOME);
  my @genome = split /\//, $genome_file;
  my $file = pop @genome;
  ($genome_base) = $genome_file =~ /(.+)\.fa|fasta/;
}
else {
  print
"Please provide the path to the Genome file. $GENOME is not valid or does not exist\n";
  getHelp();
}

my $queue;
if ( defined $QUEUE ) {
  $queue = " -q $QUEUE ";
}
else {
  $queue = '';
}

open MAKEFILE, ">$fastq_dir/Makefile"
  or die "Can't open $fastq_dir/Makefile for writing $!\n";

## this script will go thru each entry in the sample/illumina_barcode_id file (see below for file format)
## and rename the flowcell193_lane5_pair1_ATCACG.fastq formatted files to this format: RIL13_0_TTAGGC_FC193L5_p2.fq
## it will then create shell scripts which get submitted to the queue for trimming and genotyping

############## input file formats ##############################################
####### $BARCODE_SAMPLE_FILE format: #######
##cat FC193_RIL_12-16_43/name_illumina_id.txt
##RIL12_0 27
##RIL13_0 3
##RIL16_0 22

####### final_trim.txt format: ##############
##cat final_trim.txt
##RIL13_0_TTAGGC_FC193L5,/rhome/robb/Wessler-Rice/RIL/Illumina/RIL13_0/RIL13_0_TTAGGC_FC193L5_p1.fq,/rhome/robb/Wessler-Rice/RIL/Illumina/RIL13_0/RIL13_0_TTAGGC_FC193L5_p2.fq
##RIL45_0_ATCACG_FC193L5,/rhome/robb/Wessler-Rice/RIL/Illumina/RIL45_0/RIL45_0_ATCACG_FC193L5_p1.fq,/rhome/robb/Wessler-Rice/RIL/Illumina/RIL45_0/RIL45_0_ATCACG_FC193L5_p2.fq

################################################################################

print MAKEFILE "

clean: 
	rm $fastq_dir/final_renamed.txt

 

genotype: final_renamed.txt
	ARGS=( `cat \$^` )
	for i in \"\${ARGS[\@]}\"
	do
	 echo \"
	 date
	 SHORT=`echo \$i|cut -d ", " -f1`
	 FQ_1 =`echo \$i|cut -d ",  " -f2`
	 FQ_2 =`echo \$i|cut -d ",  " -f3`
	 cd $current_dir
	 if [ ! -d $current_dir/$genome_base ]; then
	  mkdir -p $current_dir/$genome_base
	 fi
	 cd $current_dir/$genome_base
	 $SCRIPTS/process_reads_genotype.sh $genome_file \$FQ_1 \$FQ_2 \$SHORT $dbSNP_file $current_dir/$genome_base 
	 date
	 \" >$current_dir/run.genotype.\${SHORT}.sh
	 qsub $queue $current_dir/run.genotype.\${SHORT}.sh
	done


final_renamed.txt: $SCRIPTS/rename_files.pl $outdir $fastq_dir $id_file
	cd $fastq_dir
	\$^ > \$@

";

#`$SCRIPTS/Makefile`;
print "Now run $SCRIPTS/Makefile like this:
cd $SCRIPTS
make all
";
